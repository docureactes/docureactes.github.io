"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[4400],{8159:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=o(4848),a=o(8453);const r={},i="useImperativeHandle",c={id:"Hook/7-8-useImperativeHandle",title:"useImperativeHandle",description:"\xbfQu\xe9 es useImperativeHandle?",source:"@site/docs/7-Hook/7-8-useImperativeHandle.md",sourceDirName:"7-Hook",slug:"/Hook/7-8-useImperativeHandle",permalink:"/Hook/7-8-useImperativeHandle",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Diferencias entre useLayoutEffect y useEffect",permalink:"/Hook/7-7-Diferencias entre useLayoutEffect y useEffect"},next:{title:"Hooks personalizados",permalink:"/Hook/7-9-Hooks personalizados"}},t={},l=[{value:"\xbfQu\xe9 es <code>useImperativeHandle</code>?",id:"qu\xe9-es-useimperativehandle",level:2},{value:"\xbfCu\xe1ndo deber\xedas usar <code>useImperativeHandle</code>?",id:"cu\xe1ndo-deber\xedas-usar-useimperativehandle",level:3},{value:"Ejemplo b\xe1sico de <code>useImperativeHandle</code>",id:"ejemplo-b\xe1sico-de-useimperativehandle",level:3},{value:"Explicaci\xf3n del ejemplo",id:"explicaci\xf3n-del-ejemplo",level:3},{value:"Puntos clave a tener en cuenta",id:"puntos-clave-a-tener-en-cuenta",level:3},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"useimperativehandle",children:"useImperativeHandle"}),"\n",(0,s.jsxs)(n.h2,{id:"qu\xe9-es-useimperativehandle",children:["\xbfQu\xe9 es ",(0,s.jsx)(n.code,{children:"useImperativeHandle"}),"?"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useImperativeHandle"})," es un hook avanzado en React que te permite personalizar la instancia ref que se expone cuando usas ",(0,s.jsx)(n.code,{children:"React.forwardRef"}),". En palabras m\xe1s simples, este hook te da el control sobre qu\xe9 valores o funciones son accesibles desde un componente hijo a trav\xe9s de una referencia (",(0,s.jsx)(n.code,{children:"ref"}),") en el componente padre."]}),"\n",(0,s.jsxs)(n.h3,{id:"cu\xe1ndo-deber\xedas-usar-useimperativehandle",children:["\xbfCu\xe1ndo deber\xedas usar ",(0,s.jsx)(n.code,{children:"useImperativeHandle"}),"?"]}),"\n",(0,s.jsx)(n.p,{children:"Este hook es \xfatil cuando necesitas exponer ciertas funcionalidades de un componente hijo al componente padre, pero sin exponer la totalidad del DOM o de las instancias internas del componente hijo. Es especialmente \xfatil cuando se trabaja con componentes personalizados que manejan operaciones complejas."}),"\n",(0,s.jsxs)(n.h3,{id:"ejemplo-b\xe1sico-de-useimperativehandle",children:["Ejemplo b\xe1sico de ",(0,s.jsx)(n.code,{children:"useImperativeHandle"})]}),"\n",(0,s.jsxs)(n.p,{children:["Vamos a ver un ejemplo simple donde ",(0,s.jsx)(n.code,{children:"useImperativeHandle"})," se utiliza para exponer una funci\xf3n ",(0,s.jsx)(n.code,{children:"focus"})," de un componente hijo hacia su componente padre."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useImperativeHandle, forwardRef, useRef } from 'react';\n\n// Definimos el componente hijo que recibe una referencia (ref)\nconst InputConFocus = forwardRef((props, ref) => {\n  const inputRef = useRef();\n\n  // Utilizamos useImperativeHandle para exponer m\xe9todos espec\xedficos\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      inputRef.current.focus(); // Enfocamos el input al llamar a `focus`\n    }\n  }));\n\n  return <input ref={inputRef} type=\"text\" />;\n});\n\nconst ComponentePadre = () => {\n  const ref = useRef();\n\n  return (\n    <div>\n      <InputConFocus ref={ref} />\n      {/* Bot\xf3n para enfocar el input en el componente hijo */}\n      <button onClick={() => ref.current.focus()}>\n        Enfocar el input\n      </button>\n    </div>\n  );\n};\n\nexport default ComponentePadre;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"explicaci\xf3n-del-ejemplo",children:"Explicaci\xf3n del ejemplo"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"forwardRef"}),": En este caso, ",(0,s.jsx)(n.code,{children:"InputConFocus"})," es un componente hijo que usa ",(0,s.jsx)(n.code,{children:"forwardRef"})," para recibir una referencia (",(0,s.jsx)(n.code,{children:"ref"}),") desde su componente padre (",(0,s.jsx)(n.code,{children:"ComponentePadre"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"useImperativeHandle"}),": Dentro de ",(0,s.jsx)(n.code,{children:"InputConFocus"}),", usamos ",(0,s.jsx)(n.code,{children:"useImperativeHandle"})," para exponer solo la funci\xf3n ",(0,s.jsx)(n.code,{children:"focus"})," al componente padre. De esta manera, el componente padre puede enfocar el input llamando a ",(0,s.jsx)(n.code,{children:"ref.current.focus()"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"inputRef"}),": Es una referencia interna que apunta al elemento ",(0,s.jsx)(n.code,{children:"<input>"})," en el DOM. Esto nos permite manipular directamente el DOM del input cuando sea necesario, pero \xfanicamente a trav\xe9s de la funci\xf3n ",(0,s.jsx)(n.code,{children:"focus"})," que hemos definido."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"puntos-clave-a-tener-en-cuenta",children:"Puntos clave a tener en cuenta"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Encapsulaci\xf3n"}),": ",(0,s.jsx)(n.code,{children:"useImperativeHandle"})," te permite mantener la encapsulaci\xf3n de tu componente al evitar que el componente padre tenga acceso completo a la implementaci\xf3n interna del componente hijo. Solo expones lo que es necesario."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"forwardRef es necesario"}),": Este hook solo funciona dentro de un componente que est\xe9 envuelto en ",(0,s.jsx)(n.code,{children:"forwardRef"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["No abuses de ",(0,s.jsx)(n.code,{children:"useImperativeHandle"})]}),": Es una herramienta poderosa, pero deber\xeda usarse con moderaci\xf3n. En la mayor\xeda de los casos, tratar de evitar el acceso directo al DOM y confiar en el flujo de datos y propiedades de React es la mejor pr\xe1ctica."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"React.forwardRef"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Encapsulaci\xf3n en React"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Referencias en React"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Hooks avanzados en React"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useImperativeHandle"})," es un hook avanzado en React que te permite controlar qu\xe9 partes de un componente hijo son accesibles desde el componente padre a trav\xe9s de una referencia. Esto es \xfatil para exponer funciones o m\xe9todos espec\xedficos sin dar acceso completo a la implementaci\xf3n interna del componente hijo, manteniendo la encapsulaci\xf3n y el control sobre el comportamiento del componente."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var s=o(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);