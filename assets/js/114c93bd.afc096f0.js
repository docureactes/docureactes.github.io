"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[3476],{8761:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var s=a(4848),o=a(8453);const r={},t="Razones para que useEffect realice una sola tarea",c={id:"Ciclo de vida/4-3-Razones para que useEffect realice una sola tarea",title:"Razones para que useEffect realice una sola tarea",description:"---",source:"@site/docs/4-Ciclo de vida/4-3-Razones para que useEffect realice una sola tarea.md",sourceDirName:"4-Ciclo de vida",slug:"/Ciclo de vida/4-3-Razones para que useEffect realice una sola tarea",permalink:"/Ciclo de vida/4-3-Razones para que useEffect realice una sola tarea",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uso de useEffect con funciones con nombre",permalink:"/Ciclo de vida/4-2-Uso de useEffect con funciones con nombre"},next:{title:"Gesti\xf3n de operaciones as\xedncronas dentro de useEffect",permalink:"/Ciclo de vida/4-4-Gesti\xf3n de operaciones as\xedncronas dentro de useEffect"}},d={},i=[{value:"\xbfQu\xe9 es <code>useEffect</code>?",id:"qu\xe9-es-useeffect",level:2},{value:"Ejemplo b\xe1sico de <code>useEffect</code>",id:"ejemplo-b\xe1sico-de-useeffect",level:3},{value:"\xbfPor qu\xe9 deber\xeda <code>useEffect</code> realizar una sola tarea?",id:"por-qu\xe9-deber\xeda-useeffect-realizar-una-sola-tarea",level:2},{value:"1. <strong>Claridad y simplicidad</strong>",id:"1-claridad-y-simplicidad",level:3},{value:"2. <strong>Mejora el control del ciclo de vida</strong>",id:"2-mejora-el-control-del-ciclo-de-vida",level:3},{value:"3. <strong>Facilita el manejo de errores</strong>",id:"3-facilita-el-manejo-de-errores",level:3},{value:"4. <strong>Previene efectos secundarios no deseados</strong>",id:"4-previene-efectos-secundarios-no-deseados",level:3},{value:"Ejemplo de un <code>useEffect</code> mal estructurado",id:"ejemplo-de-un-useeffect-mal-estructurado",level:2},{value:"Ejemplo de un <code>useEffect</code> bien estructurado",id:"ejemplo-de-un-useeffect-bien-estructurado",level:2},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"razones-para-que-useeffect-realice-una-sola-tarea",children:"Razones para que useEffect realice una sola tarea"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["Cuando trabajamos con el hook ",(0,s.jsx)(n.code,{children:"useEffect"})," en React, es fundamental mantener nuestro c\xf3digo organizado y f\xe1cil de entender. Una de las mejores pr\xe1cticas es asegurarse de que cada ",(0,s.jsx)(n.code,{children:"useEffect"})," realice ",(0,s.jsx)(n.strong,{children:"una sola tarea espec\xedfica"}),". Esto no solo mejora la legibilidad, sino que tambi\xe9n evita errores y facilita el mantenimiento del c\xf3digo. A continuaci\xf3n, exploraremos por qu\xe9 es importante seguir esta recomendaci\xf3n y c\xf3mo hacerlo correctamente."]}),"\n",(0,s.jsxs)(n.h2,{id:"qu\xe9-es-useeffect",children:["\xbfQu\xe9 es ",(0,s.jsx)(n.code,{children:"useEffect"}),"?"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useEffect"})," es un hook en React que nos permite manejar efectos secundarios en los componentes funcionales. Un efecto secundario puede ser cualquier cosa que interact\xfae con el mundo exterior de nuestro componente, como llamadas a APIs, suscripciones, o incluso actualizaciones en el DOM."]}),"\n",(0,s.jsxs)(n.h3,{id:"ejemplo-b\xe1sico-de-useeffect",children:["Ejemplo b\xe1sico de ",(0,s.jsx)(n.code,{children:"useEffect"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useEffect, useState } from 'react';\n\nfunction EjemploUseEffect() {\n  const [datos, setDatos] = useState([]);\n\n  // Este useEffect realiza una tarea: fetch de datos desde una API\n  useEffect(() => {\n    fetch('https://api.ejemplo.com/datos')\n      .then((respuesta) => respuesta.json())\n      .then((datos) => setDatos(datos));\n  }, []); // [] significa que este efecto se ejecuta solo una vez al montar el componente\n\n  return (\n    <div>\n      <h1>Datos obtenidos:</h1>\n      <ul>\n        {datos.map((item) => (\n          <li key={item.id}>{item.nombre}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["En este ejemplo, el ",(0,s.jsx)(n.code,{children:"useEffect"})," realiza una \xfanica tarea: ",(0,s.jsx)(n.strong,{children:"obtener datos de una API"})," cuando el componente se monta. Esto hace que el c\xf3digo sea f\xe1cil de entender y mantener."]}),"\n",(0,s.jsxs)(n.h2,{id:"por-qu\xe9-deber\xeda-useeffect-realizar-una-sola-tarea",children:["\xbfPor qu\xe9 deber\xeda ",(0,s.jsx)(n.code,{children:"useEffect"})," realizar una sola tarea?"]}),"\n",(0,s.jsxs)(n.h3,{id:"1-claridad-y-simplicidad",children:["1. ",(0,s.jsx)(n.strong,{children:"Claridad y simplicidad"})]}),"\n",(0,s.jsxs)(n.p,{children:["Cuando cada ",(0,s.jsx)(n.code,{children:"useEffect"})," se enfoca en una sola tarea, es m\xe1s f\xe1cil para otros desarrolladores (o para ti mismo en el futuro) entender qu\xe9 hace el c\xf3digo. Si mezclamos varias tareas en un solo ",(0,s.jsx)(n.code,{children:"useEffect"}),", puede resultar confuso y dif\xedcil de seguir."]}),"\n",(0,s.jsxs)(n.h3,{id:"2-mejora-el-control-del-ciclo-de-vida",children:["2. ",(0,s.jsx)(n.strong,{children:"Mejora el control del ciclo de vida"})]}),"\n",(0,s.jsxs)(n.p,{children:["Dividir las tareas en m\xfaltiples ",(0,s.jsx)(n.code,{children:"useEffect"})," te permite un control m\xe1s preciso sobre cu\xe1ndo y c\xf3mo se ejecutan las distintas operaciones. Cada ",(0,s.jsx)(n.code,{children:"useEffect"})," puede depender de diferentes variables, lo que optimiza el rendimiento y evita ejecuciones innecesarias."]}),"\n",(0,s.jsxs)(n.h3,{id:"3-facilita-el-manejo-de-errores",children:["3. ",(0,s.jsx)(n.strong,{children:"Facilita el manejo de errores"})]}),"\n",(0,s.jsxs)(n.p,{children:["Si surge un problema en tu c\xf3digo, identificar errores es m\xe1s sencillo cuando cada ",(0,s.jsx)(n.code,{children:"useEffect"})," realiza una tarea. Si un ",(0,s.jsx)(n.code,{children:"useEffect"})," falla, sabes exactamente qu\xe9 parte del c\xf3digo investigar, lo que reduce el tiempo de depuraci\xf3n."]}),"\n",(0,s.jsxs)(n.h3,{id:"4-previene-efectos-secundarios-no-deseados",children:["4. ",(0,s.jsx)(n.strong,{children:"Previene efectos secundarios no deseados"})]}),"\n",(0,s.jsxs)(n.p,{children:["Al dividir las tareas en distintos ",(0,s.jsx)(n.code,{children:"useEffect"}),", se reduce el riesgo de que una tarea interfiera con otra. Por ejemplo, realizar una actualizaci\xf3n del estado y una llamada a una API en el mismo ",(0,s.jsx)(n.code,{children:"useEffect"})," puede producir resultados inesperados."]}),"\n",(0,s.jsxs)(n.h2,{id:"ejemplo-de-un-useeffect-mal-estructurado",children:["Ejemplo de un ",(0,s.jsx)(n.code,{children:"useEffect"})," mal estructurado"]}),"\n",(0,s.jsx)(n.p,{children:"Veamos un ejemplo de lo que no deber\xedamos hacer:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useEffect, useState } from 'react';\n\nfunction EjemploMaloUseEffect() {\n  const [datos, setDatos] = useState([]);\n  const [contador, setContador] = useState(0);\n\n  // Este useEffect realiza varias tareas, lo cual no es recomendable\n  useEffect(() => {\n    fetch('https://api.ejemplo.com/datos')\n      .then((respuesta) => respuesta.json())\n      .then((datos) => setDatos(datos));\n\n    const intervalId = setInterval(() => {\n      setContador((prevContador) => prevContador + 1);\n    }, 1000);\n\n    // Limpiar el intervalo cuando el componente se desmonta\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div>\n      <h1>Contador: {contador}</h1>\n      <ul>\n        {datos.map((item) => (\n          <li key={item.id}>{item.nombre}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["En este caso, el ",(0,s.jsx)(n.code,{children:"useEffect"})," hace ",(0,s.jsx)(n.strong,{children:"demasiadas cosas a la vez"}),": obtiene datos de una API, establece un intervalo para incrementar un contador, y adem\xe1s se ocupa de la limpieza del intervalo cuando el componente se desmonta. Todo esto deber\xeda estar separado."]}),"\n",(0,s.jsxs)(n.h2,{id:"ejemplo-de-un-useeffect-bien-estructurado",children:["Ejemplo de un ",(0,s.jsx)(n.code,{children:"useEffect"})," bien estructurado"]}),"\n",(0,s.jsxs)(n.p,{children:["Ahora, veamos c\xf3mo podemos mejorar el c\xf3digo anterior separando las tareas en distintos ",(0,s.jsx)(n.code,{children:"useEffect"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useEffect, useState } from 'react';\n\nfunction EjemploMejoradoUseEffect() {\n  const [datos, setDatos] = useState([]);\n  const [contador, setContador] = useState(0);\n\n  // Primer useEffect: obtener datos de la API\n  useEffect(() => {\n    fetch('https://api.ejemplo.com/datos')\n      .then((respuesta) => respuesta.json())\n      .then((datos) => setDatos(datos));\n  }, []);\n\n  // Segundo useEffect: manejar el contador con un intervalo\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setContador((prevContador) => prevContador + 1);\n    }, 1000);\n\n    // Limpiar el intervalo cuando el componente se desmonta\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div>\n      <h1>Contador: {contador}</h1>\n      <ul>\n        {datos.map((item) => (\n          <li key={item.id}>{item.nombre}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["En este ejemplo, cada ",(0,s.jsx)(n.code,{children:"useEffect"})," realiza ",(0,s.jsx)(n.strong,{children:"una \xfanica tarea"})," espec\xedfica, lo que hace que el c\xf3digo sea mucho m\xe1s claro y f\xe1cil de mantener."]}),"\n",(0,s.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Efectos secundarios en React"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Ciclo de vida de los componentes funcionales"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Manejo de eventos as\xedncronos en React"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Optimizaci\xf3n del rendimiento con ",(0,s.jsx)(n.code,{children:"useEffect"})]})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,s.jsxs)(n.p,{children:["Es importante que cada ",(0,s.jsx)(n.code,{children:"useEffect"})," realice una sola tarea para mejorar la claridad, el control del ciclo de vida, el manejo de errores y prevenir efectos secundarios no deseados. Siguiendo esta pr\xe1ctica, tu c\xf3digo ser\xe1 m\xe1s legible, mantenible y menos propenso a errores."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>c});var s=a(6540);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);