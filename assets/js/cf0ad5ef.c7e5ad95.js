"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[1893],{7724:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var o=r(4848),s=r(8453);const i={},a="Uso seguro de Raw HTML",d={id:"Renderizado/6-4-Uso seguro de Raw HTML",title:"Uso seguro de Raw HTML",description:'El uso de HTML "en bruto" (Raw HTML) en React puede ser necesario en ciertas ocasiones, como cuando quieres insertar c\xf3digo HTML directamente en tus componentes. Sin embargo, esto debe hacerse con cuidado para evitar problemas de seguridad como ataques de Cross-Site Scripting (XSS). En este art\xedculo, te mostrar\xe9 c\xf3mo manejar HTML en bruto de manera segura dentro de tus aplicaciones React.',source:"@site/docs/6-Renderizado/6-4-Uso seguro de Raw HTML.md",sourceDirName:"6-Renderizado",slug:"/Renderizado/6-4-Uso seguro de Raw HTML",permalink:"/Renderizado/6-4-Uso seguro de Raw HTML",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uso de Key dentro de listas",permalink:"/Renderizado/6-3-Uso de Key dentro de listas"},next:{title:"Renderizado din\xe1mico y condicional",permalink:"/Renderizado/6-5-Renderizado din\xe1mico y condicional"}},t={},c=[{value:"Insertar HTML en bruto usando <code>dangerouslySetInnerHTML</code>",id:"insertar-html-en-bruto-usando-dangerouslysetinnerhtml",level:2},{value:"Desglose del ejemplo:",id:"desglose-del-ejemplo",level:3},{value:"Precauciones al usar <code>dangerouslySetInnerHTML</code>:",id:"precauciones-al-usar-dangerouslysetinnerhtml",level:3},{value:"Ejemplo pr\xe1ctico con validaci\xf3n",id:"ejemplo-pr\xe1ctico-con-validaci\xf3n",level:2},{value:"\xbfQu\xe9 hace <code>DOMPurify</code>?",id:"qu\xe9-hace-dompurify",level:3},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"uso-seguro-de-raw-html",children:"Uso seguro de Raw HTML"}),"\n",(0,o.jsx)(n.p,{children:'El uso de HTML "en bruto" (Raw HTML) en React puede ser necesario en ciertas ocasiones, como cuando quieres insertar c\xf3digo HTML directamente en tus componentes. Sin embargo, esto debe hacerse con cuidado para evitar problemas de seguridad como ataques de Cross-Site Scripting (XSS). En este art\xedculo, te mostrar\xe9 c\xf3mo manejar HTML en bruto de manera segura dentro de tus aplicaciones React.'}),"\n",(0,o.jsxs)(n.h2,{id:"insertar-html-en-bruto-usando-dangerouslysetinnerhtml",children:["Insertar HTML en bruto usando ",(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"})]}),"\n",(0,o.jsxs)(n.p,{children:["En React, la forma est\xe1ndar de insertar HTML directamente en el DOM es mediante el atributo ",(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"}),". A pesar de su nombre intimidante, este m\xe9todo puede ser seguro si se usa correctamente. Veamos un ejemplo:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\n\nfunction ComponenteConHTML() {\n  // HTML que queremos insertar\n  const htmlString = \"<p>Este es un <strong>texto</strong> con HTML.</p>\";\n\n  return (\n    <div>\n      <h2>Insertando HTML en bruto</h2>\n      {/* Usamos dangerouslySetInnerHTML para insertar el HTML */}\n      <div dangerouslySetInnerHTML={{ __html: htmlString }} />\n    </div>\n  );\n}\n\nexport default ComponenteConHTML;\n"})}),"\n",(0,o.jsx)(n.h3,{id:"desglose-del-ejemplo",children:"Desglose del ejemplo:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"})}),': Es un atributo especial en React que permite insertar HTML directamente. El nombre "dangerously" resalta la necesidad de tener cuidado al usarlo.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"__html"})}),": Este es el nombre de la propiedad en el objeto que pasas a ",(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"}),". Es donde se coloca la cadena de HTML que deseas renderizar."]}),"\n"]}),"\n",(0,o.jsxs)(n.h3,{id:"precauciones-al-usar-dangerouslysetinnerhtml",children:["Precauciones al usar ",(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Validar y limpiar el HTML"}),": Antes de insertar HTML desde fuentes externas, debes asegurarte de que no contenga scripts maliciosos. Utiliza bibliotecas como ",(0,o.jsx)(n.code,{children:"DOMPurify"})," para limpiar el HTML."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import DOMPurify from 'dompurify';\n\nconst htmlString = \"<script>alert('Hackeado!')<\/script><p>Texto seguro</p>\";\nconst cleanHTML = DOMPurify.sanitize(htmlString);\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Evitar insertar HTML desde usuarios no confiables"}),": Si el HTML proviene de una entrada del usuario o de una fuente no confiable, siempre debes limpiarlo para prevenir XSS."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"ejemplo-pr\xe1ctico-con-validaci\xf3n",children:"Ejemplo pr\xe1ctico con validaci\xf3n"}),"\n",(0,o.jsxs)(n.p,{children:["Vamos a mejorar nuestro ejemplo anterior a\xf1adiendo un proceso de sanitizaci\xf3n usando ",(0,o.jsx)(n.code,{children:"DOMPurify"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport DOMPurify from 'dompurify';\n\nfunction ComponenteSeguroConHTML() {\n  // HTML potencialmente inseguro\n  const htmlString = \"<script>alert('Hackeado!')<\/script><p>Texto seguro</p>\";\n  // Limpiamos el HTML antes de insertarlo\n  const cleanHTML = DOMPurify.sanitize(htmlString);\n\n  return (\n    <div>\n      <h2>Insertando HTML limpio</h2>\n      {/* Insertamos el HTML ya sanitizado */}\n      <div dangerouslySetInnerHTML={{ __html: cleanHTML }} />\n    </div>\n  );\n}\n\nexport default ComponenteSeguroConHTML;\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"qu\xe9-hace-dompurify",children:["\xbfQu\xe9 hace ",(0,o.jsx)(n.code,{children:"DOMPurify"}),"?"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Elimina scripts maliciosos"}),": ",(0,o.jsx)(n.code,{children:"DOMPurify"})," es una biblioteca que analiza y limpia el HTML, eliminando cualquier c\xf3digo que pueda ser peligroso, como ",(0,o.jsx)(n.code,{children:"<script>"})," o ",(0,o.jsx)(n.code,{children:'<img onerror="...">'}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Cross-Site Scripting (XSS)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"})," en la documentaci\xf3n de React"]})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Sanitizaci\xf3n de HTML con DOMPurify"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,o.jsxs)(n.p,{children:["El uso de HTML en bruto en React debe hacerse con extrema precauci\xf3n, utilizando siempre t\xe9cnicas de sanitizaci\xf3n como ",(0,o.jsx)(n.code,{children:"DOMPurify"})," para prevenir vulnerabilidades de seguridad. Aunque ",(0,o.jsx)(n.code,{children:"dangerouslySetInnerHTML"})," es la herramienta para este prop\xf3sito, su nombre nos recuerda que debemos estar atentos al origen y contenido del HTML que insertamos."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var o=r(6540);const s={},i=o.createContext(s);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);