"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[2902],{4143:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=o(4848),a=o(8453);const i={},r="Ejemplos de copias y operaciones innecesarias con Props",c={id:"Props/3-3-Ejemplos de copias y operaciones innecesarias con Props",title:"Ejemplos de copias y operaciones innecesarias con Props",description:"En este apartado, vamos a explorar c\xf3mo podemos optimizar nuestro c\xf3digo React evitando copias y operaciones innecesarias con las Props. Es fundamental entender c\xf3mo se comportan las Props en React para escribir c\xf3digo m\xe1s eficiente y claro.",source:"@site/docs/3-Props/3-3-Ejemplos de copias y operaciones innecesarias con Props.md",sourceDirName:"3-Props",slug:"/Props/3-3-Ejemplos de copias y operaciones innecesarias con Props",permalink:"/Props/3-3-Ejemplos de copias y operaciones innecesarias con Props",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Diferencias entre State y Props",permalink:"/Props/3-2-Diferencias entre State y Props"},next:{title:"Verificaci\xf3n de tipos y configuraci\xf3n de valores predeterminados con PropTypes",permalink:"/Props/3-4-Verificaci\xf3n de tipos y configuraci\xf3n de valores predeterminados con PropTypes"}},p={},l=[{value:"\xbfQu\xe9 son las Props?",id:"qu\xe9-son-las-props",level:2},{value:"Ejemplo b\xe1sico de Props",id:"ejemplo-b\xe1sico-de-props",level:2},{value:"Copias innecesarias de Props",id:"copias-innecesarias-de-props",level:2},{value:"Operaciones innecesarias con Props",id:"operaciones-innecesarias-con-props",level:2},{value:"Buenas pr\xe1cticas al trabajar con Props",id:"buenas-pr\xe1cticas-al-trabajar-con-props",level:2},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ejemplos-de-copias-y-operaciones-innecesarias-con-props",children:"Ejemplos de copias y operaciones innecesarias con Props"}),"\n",(0,s.jsx)(n.p,{children:"En este apartado, vamos a explorar c\xf3mo podemos optimizar nuestro c\xf3digo React evitando copias y operaciones innecesarias con las Props. Es fundamental entender c\xf3mo se comportan las Props en React para escribir c\xf3digo m\xe1s eficiente y claro."}),"\n",(0,s.jsx)(n.h2,{id:"qu\xe9-son-las-props",children:"\xbfQu\xe9 son las Props?"}),"\n",(0,s.jsx)(n.p,{children:"Las Props son datos que se pasan de un componente padre a un componente hijo. Son inmutables, lo que significa que no se pueden modificar directamente dentro del componente que las recibe."}),"\n",(0,s.jsx)(n.h2,{id:"ejemplo-b\xe1sico-de-props",children:"Ejemplo b\xe1sico de Props"}),"\n",(0,s.jsxs)(n.p,{children:["Imaginemos un componente ",(0,s.jsx)(n.code,{children:"Saludo"})," que recibe una Prop llamada ",(0,s.jsx)(n.code,{children:"nombre"})," y la utiliza para mostrar un mensaje personalizado."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Componente Saludo que recibe la Prop "nombre"\nfunction Saludo({ nombre }) {\n  return (\n    <div>\n      <h1>Hola, {nombre}!</h1>\n    </div>\n  );\n}\n\n// Uso del componente Saludo\nfunction App() {\n  return <Saludo nombre="Juan" />;\n}\n\nexport default App;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["En este caso, ",(0,s.jsx)(n.code,{children:"nombre"})," es una Prop que se pasa al componente ",(0,s.jsx)(n.code,{children:"Saludo"}),". ",(0,s.jsx)(n.strong,{children:"No es necesario hacer ninguna operaci\xf3n adicional con ella"}),", simplemente la usamos directamente en el JSX."]}),"\n",(0,s.jsx)(n.h2,{id:"copias-innecesarias-de-props",children:"Copias innecesarias de Props"}),"\n",(0,s.jsx)(n.p,{children:"Un error com\xfan al trabajar con Props es realizar copias innecesarias de estas, lo cual puede hacer el c\xf3digo m\xe1s complejo y menos eficiente. Veamos un ejemplo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Componente que realiza una copia innecesaria de la Prop "datos"\nfunction MostrarDatos({ datos }) {\n  const copiaDatos = { ...datos }; // Esta copia es innecesaria\n\n  return (\n    <div>\n      <p>Nombre: {copiaDatos.nombre}</p>\n      <p>Edad: {copiaDatos.edad}</p>\n    </div>\n  );\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["En este caso, estamos haciendo una copia del objeto ",(0,s.jsx)(n.code,{children:"datos"})," con el operador de propagaci\xf3n (",(0,s.jsx)(n.code,{children:"..."}),"). ",(0,s.jsx)(n.strong,{children:"Esto es innecesario"})," porque no tenemos ninguna intenci\xf3n de modificar ",(0,s.jsx)(n.code,{children:"datos"})," dentro del componente. Podr\xedamos simplemente acceder directamente a ",(0,s.jsx)(n.code,{children:"datos.nombre"})," y ",(0,s.jsx)(n.code,{children:"datos.edad"})," sin realizar la copia."]}),"\n",(0,s.jsx)(n.h2,{id:"operaciones-innecesarias-con-props",children:"Operaciones innecesarias con Props"}),"\n",(0,s.jsx)(n.p,{children:"Adem\xe1s de las copias innecesarias, otro error com\xfan es realizar operaciones con Props que no aportan ning\xfan beneficio. Consideremos el siguiente ejemplo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Componente que realiza operaciones innecesarias con la Prop "lista"\nfunction ListaElementos({ lista }) {\n  const nuevaLista = lista.slice(); // Esta operaci\xf3n es innecesaria\n\n  return (\n    <ul>\n      {nuevaLista.map((elemento, index) => (\n        <li key={index}>{elemento}</li>\n      ))}\n    </ul>\n  );\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Aqu\xed, estamos utilizando ",(0,s.jsx)(n.code,{children:"slice()"})," para crear una copia de la lista. ",(0,s.jsx)(n.strong,{children:"Esta operaci\xf3n no es necesaria"})," si no planeamos modificar la lista. De nuevo, podemos iterar directamente sobre ",(0,s.jsx)(n.code,{children:"lista"})," sin hacer la copia."]}),"\n",(0,s.jsx)(n.h2,{id:"buenas-pr\xe1cticas-al-trabajar-con-props",children:"Buenas pr\xe1cticas al trabajar con Props"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Usar Props directamente cuando sea posible"}),": Si no necesitas modificar los datos, no hagas copias. Las Props son inmutables y seguras para usarse directamente."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Evitar operaciones innecesarias"}),": Solo realiza operaciones en las Props si realmente es necesario para la l\xf3gica de tu componente."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comprender la inmutabilidad"}),": Recuerda que las Props no se pueden cambiar. Si necesitas modificar datos, considera usar ",(0,s.jsx)(n.code,{children:"State"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Props inmutables"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Operador de propagaci\xf3n (",(0,s.jsx)(n.code,{children:"..."}),")"]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Eficiencia en React"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Optimizaci\xf3n de rendimiento"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,s.jsx)(n.p,{children:"Entender c\xf3mo trabajar eficientemente con las Props en React es crucial para escribir c\xf3digo limpio y \xf3ptimo. Evitar copias y operaciones innecesarias no solo simplifica tu c\xf3digo, sino que tambi\xe9n mejora el rendimiento de tu aplicaci\xf3n. Utiliza las Props directamente siempre que sea posible y solo realiza operaciones cuando sea absolutamente necesario."})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var s=o(6540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);