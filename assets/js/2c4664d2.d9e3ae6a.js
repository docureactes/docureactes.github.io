"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[348],{4841:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(4848),s=n(8453);const r={},t="Extracci\xf3n de l\xf3gica de estado con Hooks personalizados",i={id:"Hook/7-11-Extracci\xf3n de l\xf3gica de estado con Hooks personalizados",title:"Extracci\xf3n de l\xf3gica de estado con Hooks personalizados",description:"En React, la reutilizaci\xf3n de la l\xf3gica de estado entre componentes puede ser un desaf\xedo cuando se utiliza el useState y useEffect directamente dentro de los componentes. Afortunadamente, React ofrece una soluci\xf3n elegante a este problema a trav\xe9s de los Hooks personalizados. Los Hooks personalizados te permiten extraer la l\xf3gica de estado y reutilizarla en diferentes componentes, lo que simplifica tu c\xf3digo y lo hace m\xe1s mantenible.",source:"@site/docs/7-Hook/7-11-Extracci\xf3n de l\xf3gica de estado con Hooks personalizados.md",sourceDirName:"7-Hook",slug:"/Hook/7-11-Extracci\xf3n de l\xf3gica de estado con Hooks personalizados",permalink:"/Hook/7-11-Extracci\xf3n de l\xf3gica de estado con Hooks personalizados",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tipos de retornos de Hooks personalizados",permalink:"/Hook/7-10-Tipos de retornos de Hooks personalizados"},next:{title:"useContext",permalink:"/Hook/7-2-useContext"}},l={},c=[{value:"\xbfQu\xe9 es un Hook personalizado?",id:"qu\xe9-es-un-hook-personalizado",level:2},{value:"Ejemplo b\xe1sico de un Hook personalizado",id:"ejemplo-b\xe1sico-de-un-hook-personalizado",level:3},{value:"Detalles importantes sobre los Hooks personalizados",id:"detalles-importantes-sobre-los-hooks-personalizados",level:3},{value:"Ejemplo avanzado: Hook para manejar una solicitud HTTP",id:"ejemplo-avanzado-hook-para-manejar-una-solicitud-http",level:3},{value:"Puntos clave a tener en cuenta",id:"puntos-clave-a-tener-en-cuenta",level:3},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h1,{id:"extracci\xf3n-de-l\xf3gica-de-estado-con-hooks-personalizados",children:"Extracci\xf3n de l\xf3gica de estado con Hooks personalizados"}),"\n",(0,a.jsxs)(o.p,{children:["En React, la reutilizaci\xf3n de la l\xf3gica de estado entre componentes puede ser un desaf\xedo cuando se utiliza el ",(0,a.jsx)(o.code,{children:"useState"})," y ",(0,a.jsx)(o.code,{children:"useEffect"})," directamente dentro de los componentes. Afortunadamente, React ofrece una soluci\xf3n elegante a este problema a trav\xe9s de los ",(0,a.jsx)(o.strong,{children:"Hooks personalizados"}),". Los Hooks personalizados te permiten extraer la l\xf3gica de estado y reutilizarla en diferentes componentes, lo que simplifica tu c\xf3digo y lo hace m\xe1s mantenible."]}),"\n",(0,a.jsx)(o.h2,{id:"qu\xe9-es-un-hook-personalizado",children:"\xbfQu\xe9 es un Hook personalizado?"}),"\n",(0,a.jsx)(o.p,{children:'Un Hook personalizado es simplemente una funci\xf3n de JavaScript cuyo nombre comienza con "use" y que puede utilizar otros Hooks de React en su interior. Los Hooks personalizados permiten encapsular y reutilizar la l\xf3gica de estado de una manera que es independiente del componente en el que se usa.'}),"\n",(0,a.jsx)(o.h3,{id:"ejemplo-b\xe1sico-de-un-hook-personalizado",children:"Ejemplo b\xe1sico de un Hook personalizado"}),"\n",(0,a.jsx)(o.p,{children:"Supongamos que queremos crear un Hook personalizado que maneje un contador, el cual puede incrementar, decrementar y reiniciar el valor."}),"\n",(0,a.jsx)(o.p,{children:"Aqu\xed tienes un ejemplo:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:"// Creamos nuestro Hook personalizado llamado useCounter\nfunction useCounter(valorInicial = 0) {\n  // Definimos el estado interno del contador\n  const [contador, setContador] = React.useState(valorInicial);\n\n  // Funci\xf3n para incrementar el contador\n  const incrementar = () => setContador(contador + 1);\n\n  // Funci\xf3n para decrementar el contador\n  const decrementar = () => setContador(contador - 1);\n\n  // Funci\xf3n para reiniciar el contador al valor inicial\n  const reiniciar = () => setContador(valorInicial);\n\n  // Devolvemos el contador y las funciones en un array\n  return [contador, incrementar, decrementar, reiniciar];\n}\n\n// Ejemplo de c\xf3mo usar este Hook personalizado en un componente\nfunction Contador() {\n  // Usamos nuestro Hook personalizado\n  const [contador, incrementar, decrementar, reiniciar] = useCounter(10);\n\n  return (\n    <div>\n      <p>Valor del contador: {contador}</p>\n      <button onClick={incrementar}>Incrementar</button>\n      <button onClick={decrementar}>Decrementar</button>\n      <button onClick={reiniciar}>Reiniciar</button>\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(o.h3,{id:"detalles-importantes-sobre-los-hooks-personalizados",children:"Detalles importantes sobre los Hooks personalizados"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Reutilizaci\xf3n de l\xf3gica"}),": Como puedes ver en el ejemplo anterior, la l\xf3gica para manejar el contador est\xe1 encapsulada dentro del Hook personalizado ",(0,a.jsx)(o.code,{children:"useCounter"}),". Esto permite que la misma l\xf3gica sea utilizada en cualquier componente que necesite un contador, sin duplicar el c\xf3digo."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Nombres descriptivos"}),": Es importante dar nombres descriptivos a tus Hooks personalizados para que su prop\xf3sito sea claro para cualquier desarrollador que lea tu c\xf3digo."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Independencia del componente"}),": Un Hook personalizado no se preocupa por el dise\xf1o o la estructura del componente en el que se usa. Solo se enfoca en manejar la l\xf3gica de estado, lo que promueve un c\xf3digo m\xe1s modular y f\xe1cil de mantener."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h3,{id:"ejemplo-avanzado-hook-para-manejar-una-solicitud-http",children:"Ejemplo avanzado: Hook para manejar una solicitud HTTP"}),"\n",(0,a.jsx)(o.p,{children:"Vamos a crear un Hook personalizado para manejar una solicitud HTTP, algo muy com\xfan en aplicaciones React."}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-javascript",children:"// Creamos un Hook personalizado llamado useFetch\nfunction useFetch(url) {\n  // Definimos los estados para manejar los datos, la carga y los errores\n  const [datos, setDatos] = React.useState(null);\n  const [cargando, setCargando] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  // Usamos useEffect para realizar la solicitud cuando el componente se monta\n  React.useEffect(() => {\n    // Funci\xf3n para realizar la solicitud\n    const fetchData = async () => {\n      try {\n        const respuesta = await fetch(url);\n        if (!respuesta.ok) {\n          throw new Error(`Error en la solicitud: ${respuesta.statusText}`);\n        }\n        const data = await respuesta.json();\n        setDatos(data);  // Actualizamos los datos\n      } catch (err) {\n        setError(err);  // Capturamos y establecemos el error\n      } finally {\n        setCargando(false);  // Indicamos que la carga ha finalizado\n      }\n    };\n\n    fetchData();\n  }, [url]);  // El efecto se ejecutar\xe1 de nuevo si cambia la URL\n\n  // Devolvemos los estados para que el componente pueda usarlos\n  return { datos, cargando, error };\n}\n\n// Ejemplo de uso del Hook personalizado en un componente\nfunction DatosUsuario({ userId }) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const { datos, cargando, error } = useFetch(url);\n\n  if (cargando) return <p>Cargando...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h2>{datos.name}</h2>\n      <p>Email: {datos.email}</p>\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(o.h3,{id:"puntos-clave-a-tener-en-cuenta",children:"Puntos clave a tener en cuenta"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Control de efectos"}),": En el ejemplo del Hook ",(0,a.jsx)(o.code,{children:"useFetch"}),", se utiliza ",(0,a.jsx)(o.code,{children:"useEffect"})," para realizar la solicitud HTTP. Es importante recordar que cualquier Hook personalizado que dependa de efectos secundarios debe manejarlos de manera adecuada, como asegurarse de limpiar efectos si es necesario."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Composici\xf3n de Hooks"}),": Puedes combinar m\xfaltiples Hooks personalizados dentro de un mismo componente o incluso dentro de otro Hook personalizado, lo que te permite construir funcionalidades complejas de forma modular."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Hooks personalizados"}),"\n",(0,a.jsx)(o.li,{children:"React useState y useEffect"}),"\n",(0,a.jsx)(o.li,{children:"Reutilizaci\xf3n de l\xf3gica en React"}),"\n",(0,a.jsx)(o.li,{children:"Modularidad en React"}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"resumen",children:"Resumen"}),"\n",(0,a.jsx)(o.p,{children:"Los Hooks personalizados son una poderosa herramienta en React para encapsular y reutilizar la l\xf3gica de estado entre componentes. Permiten un c\xf3digo m\xe1s limpio, modular y f\xe1cil de mantener. Al crear un Hook personalizado, es crucial centrarse en un prop\xf3sito claro y usar nombres descriptivos para mejorar la comprensi\xf3n del c\xf3digo. Estos Hooks permiten manejar l\xf3gica compleja, como solicitudes HTTP, de manera sencilla y reutilizable en toda tu aplicaci\xf3n."})]})}function u(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>t,x:()=>i});var a=n(6540);const s={},r=a.createContext(s);function t(e){const o=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(r.Provider,{value:o},e.children)}}}]);