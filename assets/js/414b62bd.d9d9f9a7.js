"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[7462],{4419:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var a=s(4848),o=s(8453);const c={},l="Manejo de espacios en blanco en JSX",i={id:"Renderizado/6-1-Manejo de espacios en blanco en JSX",title:"Manejo de espacios en blanco en JSX",description:"En React, el uso de JSX nos permite escribir c\xf3digo de una manera que se asemeja a HTML, pero con la potencia de JavaScript. Uno de los aspectos que puede resultar confuso al principio es c\xf3mo se manejan los espacios en blanco en JSX. A continuaci\xf3n, exploraremos c\xf3mo funcionan estos espacios y c\xf3mo puedes controlarlos para que tu interfaz se vea tal como la imaginas.",source:"@site/docs/6-Renderizado/6-1-Manejo de espacios en blanco en JSX.md",sourceDirName:"6-Renderizado",slug:"/Renderizado/6-1-Manejo de espacios en blanco en JSX",permalink:"/Renderizado/6-1-Manejo de espacios en blanco en JSX",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Componentes de orden superior (HOC)",permalink:"/Componente/5-8-Componentes de orden superior (HOC)"},next:{title:"Tratamiento del valor 0 (cero) en JSX",permalink:"/Renderizado/6-2-Tratamiento del valor 0 (cero) en JSX"}},r={},d=[{value:"\xbfQu\xe9 ocurre con los espacios en blanco en JSX?",id:"qu\xe9-ocurre-con-los-espacios-en-blanco-en-jsx",level:2},{value:"Reglas b\xe1sicas de los espacios en blanco en JSX",id:"reglas-b\xe1sicas-de-los-espacios-en-blanco-en-jsx",level:3},{value:"Ejemplo pr\xe1ctico",id:"ejemplo-pr\xe1ctico",level:3},{value:"Consideraciones importantes",id:"consideraciones-importantes",level:2},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"manejo-de-espacios-en-blanco-en-jsx",children:"Manejo de espacios en blanco en JSX"}),"\n",(0,a.jsx)(n.p,{children:"En React, el uso de JSX nos permite escribir c\xf3digo de una manera que se asemeja a HTML, pero con la potencia de JavaScript. Uno de los aspectos que puede resultar confuso al principio es c\xf3mo se manejan los espacios en blanco en JSX. A continuaci\xf3n, exploraremos c\xf3mo funcionan estos espacios y c\xf3mo puedes controlarlos para que tu interfaz se vea tal como la imaginas."}),"\n",(0,a.jsx)(n.h2,{id:"qu\xe9-ocurre-con-los-espacios-en-blanco-en-jsx",children:"\xbfQu\xe9 ocurre con los espacios en blanco en JSX?"}),"\n",(0,a.jsx)(n.p,{children:"En JSX, los espacios en blanco no siempre se comportan como esperar\xedas si vienes del mundo del HTML. JSX sigue reglas espec\xedficas para procesar los espacios en blanco, y entender estas reglas es clave para evitar sorpresas en tu dise\xf1o."}),"\n",(0,a.jsx)(n.h3,{id:"reglas-b\xe1sicas-de-los-espacios-en-blanco-en-jsx",children:"Reglas b\xe1sicas de los espacios en blanco en JSX"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Espacios en blanco en l\xedneas m\xfaltiples"}),": Cuando separas el contenido en varias l\xedneas dentro de un componente JSX, los espacios al inicio y al final de las l\xedneas generalmente se ignoran. Solo los espacios entre elementos de una misma l\xednea se muestran."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'const Ejemplo = () => (\n  <div>\n    Hola\n    mundo\n  </div>\n);\n\n// Resultado en la pantalla: "Holamundo"\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota"}),": Los saltos de l\xednea no se traducen a espacios en blanco a menos que est\xe9n expl\xedcitamente entre elementos."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Espacios entre elementos"}),": Cuando tienes varios elementos en la misma l\xednea, JSX preserva un solo espacio entre ellos."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'const Ejemplo = () => (\n  <div>\n    Hola mundo\n  </div>\n);\n\n// Resultado en la pantalla: "Hola mundo"\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:["Uso de ",(0,a.jsx)(n.code,{children:"{ ' ' }"})," para a\xf1adir espacios"]}),": Si necesitas agregar espacios en blanco adicionales entre elementos, puedes usar ",(0,a.jsx)(n.code,{children:"{ ' ' }"}),", que a\xf1ade un espacio expl\xedcito."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"const Ejemplo = () => (\n  <div>\n    Hola{' '}mundo\n  </div>\n);\n\n// Resultado en la pantalla: \"Hola mundo\"\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-pr\xe1ctico",children:"Ejemplo pr\xe1ctico"}),"\n",(0,a.jsx)(n.p,{children:"Supongamos que queremos crear un componente que muestre una lista de palabras separadas por comas, pero con un espacio despu\xe9s de cada coma. Podr\xedamos hacerlo de la siguiente manera:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"const ListaPalabras = () => (\n  <div>\n    Palabra1,{' '}\n    Palabra2,{' '}\n    Palabra3\n  </div>\n);\n\n// Resultado en la pantalla: \"Palabra1, Palabra2, Palabra3\"\n"})}),"\n",(0,a.jsxs)(n.p,{children:["En este ejemplo, usamos ",(0,a.jsx)(n.code,{children:"{ ' ' }"})," para asegurarnos de que hay un espacio despu\xe9s de cada coma, lo que hace que el texto sea m\xe1s legible."]}),"\n",(0,a.jsx)(n.h2,{id:"consideraciones-importantes",children:"Consideraciones importantes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Salto de l\xednea intencionado"}),": Si necesitas que el texto en JSX se muestre en l\xedneas diferentes, deber\xe1s usar etiquetas como ",(0,a.jsx)(n.code,{children:"<br />"})," o envolver los textos en elementos de bloque como ",(0,a.jsx)(n.code,{children:"<div>"})," o ",(0,a.jsx)(n.code,{children:"<p>"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Evitar c\xf3digo ilegible"}),": Aunque puedes usar ",(0,a.jsx)(n.code,{children:"{ ' ' }"})," para manejar espacios, no abuses de esta t\xe9cnica, ya que puede hacer que el c\xf3digo sea dif\xedcil de leer. Considera el uso de CSS para controlar el espaciado cuando sea posible."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JSX"}),"\n",(0,a.jsx)(n.li,{children:"Renderizado en React"}),"\n",(0,a.jsx)(n.li,{children:"Gesti\xf3n de texto en HTML y CSS"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,a.jsxs)(n.p,{children:["El manejo de espacios en blanco en JSX puede ser un desaf\xedo al principio, pero conociendo las reglas b\xe1sicas, como la forma en que se procesan los espacios entre elementos y el uso de ",(0,a.jsx)(n.code,{children:"{ ' ' }"})," para espacios adicionales, puedes tener un control preciso sobre c\xf3mo se muestra tu contenido. Usa estas t\xe9cnicas sabiamente para mantener un c\xf3digo limpio y f\xe1cil de entender."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var a=s(6540);const o={},c=a.createContext(o);function l(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);