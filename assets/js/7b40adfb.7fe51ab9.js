"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[7387],{6623:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>t});var r=o(4848),s=o(8453);const a={},i="Introducci\xf3n a Props y buenos nombres para Props",c={id:"Props/3-1-Introducci\xf3n a Props y buenos nombres para Props",title:"Introducci\xf3n a Props y buenos nombres para Props",description:"\xbfQu\xe9 son los Props en React?",source:"@site/docs/3-Props/3-1-Introducci\xf3n a Props y buenos nombres para Props.md",sourceDirName:"3-Props",slug:"/Props/3-1-Introducci\xf3n a Props y buenos nombres para Props",permalink:"/Props/3-1-Introducci\xf3n a Props y buenos nombres para Props",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Naturaleza as\xedncrona de la funci\xf3n de actualizaci\xf3n del estado, aprovechamiento del estado anterior y reinicializaci\xf3n del estado",permalink:"/State/2-8-Naturaleza as\xedncrona de la funci\xf3n de actualizaci\xf3n del estado, aprovechamiento del estado anterior y reinicializaci\xf3n del estado"},next:{title:"Diferencias entre State y Props",permalink:"/Props/3-2-Diferencias entre State y Props"}},l={},t=[{value:"\xbfQu\xe9 son los Props en React?",id:"qu\xe9-son-los-props-en-react",level:2},{value:"Ejemplo b\xe1sico de Props",id:"ejemplo-b\xe1sico-de-props",level:3},{value:"Importancia de los buenos nombres para Props",id:"importancia-de-los-buenos-nombres-para-props",level:3},{value:"Buenas pr\xe1cticas para nombrar Props",id:"buenas-pr\xe1cticas-para-nombrar-props",level:4},{value:"Ejemplo de varios Props",id:"ejemplo-de-varios-props",level:3},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"introducci\xf3n-a-props-y-buenos-nombres-para-props",children:"Introducci\xf3n a Props y buenos nombres para Props"}),"\n",(0,r.jsx)(n.h2,{id:"qu\xe9-son-los-props-en-react",children:"\xbfQu\xe9 son los Props en React?"}),"\n",(0,r.jsxs)(n.p,{children:["En React, ",(0,r.jsx)(n.strong,{children:"Props"}),' (abreviatura de "Properties") son una forma de pasar datos de un componente padre a un componente hijo. Imagina que los componentes son como funciones en JavaScript, y los Props son los argumentos que se les pasan para que puedan hacer su trabajo. Estos Props permiten que los componentes sean m\xe1s din\xe1micos y reutilizables, ya que pueden recibir diferentes valores cada vez que se utilizan.']}),"\n",(0,r.jsxs)(n.p,{children:["Un concepto clave para entender los Props es que ",(0,r.jsx)(n.strong,{children:"son inmutables"}),", es decir, una vez que se le pasa un valor a un componente, este valor no cambia dentro de ese componente. Si necesitas que el valor cambie, deber\xedas considerar usar el estado (",(0,r.jsx)(n.code,{children:"state"}),"), que es otro concepto importante en React."]}),"\n",(0,r.jsx)(n.h3,{id:"ejemplo-b\xe1sico-de-props",children:"Ejemplo b\xe1sico de Props"}),"\n",(0,r.jsx)(n.p,{children:"Vamos a crear un componente simple que recibe un Prop y lo muestra en pantalla:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import React from \'react\';\n\n// Componente que recibe un prop llamado "mensaje"\nfunction Saludo(props) {\n  return (\n    <div>\n      <h1>Hola, {props.mensaje}!</h1> {/* Utilizamos el prop mensaje */}\n    </div>\n  );\n}\n\n// Uso del componente Saludo con un prop\nfunction App() {\n  return (\n    <div>\n      <Saludo mensaje="Mundo" /> {/* Aqu\xed pasamos "Mundo" como prop */}\n    </div>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\xbfQu\xe9 sucede aqu\xed?"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["El componente ",(0,r.jsx)(n.code,{children:"Saludo"})," recibe un prop llamado ",(0,r.jsx)(n.code,{children:"mensaje"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["El componente usa ",(0,r.jsx)(n.code,{children:"{props.mensaje}"})," para mostrar el valor de ",(0,r.jsx)(n.code,{children:"mensaje"})," en el HTML."]}),"\n",(0,r.jsxs)(n.li,{children:["En el componente ",(0,r.jsx)(n.code,{children:"App"}),", utilizamos ",(0,r.jsx)(n.code,{children:"Saludo"})," y le pasamos el prop ",(0,r.jsx)(n.code,{children:"mensaje"})," con el valor ",(0,r.jsx)(n.code,{children:'"Mundo"'}),'. Como resultado, en la pantalla veremos "Hola, Mundo!".']}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"importancia-de-los-buenos-nombres-para-props",children:"Importancia de los buenos nombres para Props"}),"\n",(0,r.jsx)(n.p,{children:"Cuando trabajamos con Props, es crucial elegir nombres que sean claros y descriptivos. Esto no solo mejora la legibilidad del c\xf3digo, sino que tambi\xe9n facilita el mantenimiento y la colaboraci\xf3n con otros desarrolladores."}),"\n",(0,r.jsx)(n.h4,{id:"buenas-pr\xe1cticas-para-nombrar-props",children:"Buenas pr\xe1cticas para nombrar Props"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Sea espec\xedfico:"})," Si un prop representa un t\xedtulo, ll\xe1melo ",(0,r.jsx)(n.code,{children:"titulo"})," o ",(0,r.jsx)(n.code,{children:"title"})," en lugar de algo gen\xe9rico como ",(0,r.jsx)(n.code,{children:"texto"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<Titulo texto="Mi t\xedtulo" />  // Menos claro\n<Titulo titulo="Mi t\xedtulo" />  // M\xe1s claro\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Utilice nombres en singular o plural seg\xfan corresponda:"})," Si un prop representa un elemento singular, utilice un nombre singular (",(0,r.jsx)(n.code,{children:"usuario"}),"), pero si representa una colecci\xf3n, utilice un nombre plural (",(0,r.jsx)(n.code,{children:"usuarios"}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<ListaUsuarios usuarios={listaDeUsuarios} />  // Claramente una lista\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Mantenga la consistencia:"})," Si utiliza un nombre para un prop en un componente, trate de usar el mismo nombre en otros componentes para el mismo tipo de dato."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<Boton color="rojo" />  // Consistente en diferentes componentes\n<Encabezado color="rojo" />\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ejemplo-de-varios-props",children:"Ejemplo de varios Props"}),"\n",(0,r.jsx)(n.p,{children:"A veces, un componente puede necesitar varios Props para funcionar correctamente. Veamos un ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import React from \'react\';\n\n// Componente que recibe varios props\nfunction TarjetaUsuario(props) {\n  return (\n    <div>\n      <h2>{props.nombre}</h2>\n      <p>Edad: {props.edad}</p>\n      <p>Correo electr\xf3nico: {props.email}</p>\n    </div>\n  );\n}\n\n// Uso del componente TarjetaUsuario\nfunction App() {\n  return (\n    <div>\n      <TarjetaUsuario nombre="Juan P\xe9rez" edad={28} email="juan.perez@example.com" />\n    </div>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\xbfQu\xe9 observamos?"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["El componente ",(0,r.jsx)(n.code,{children:"TarjetaUsuario"})," recibe tres Props: ",(0,r.jsx)(n.code,{children:"nombre"}),", ",(0,r.jsx)(n.code,{children:"edad"})," y ",(0,r.jsx)(n.code,{children:"email"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Cada Prop se utiliza en el componente para mostrar diferentes piezas de informaci\xf3n."}),"\n",(0,r.jsxs)(n.li,{children:["Al usar ",(0,r.jsx)(n.code,{children:"TarjetaUsuario"})," en ",(0,r.jsx)(n.code,{children:"App"}),", proporcionamos valores espec\xedficos para cada Prop."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inmutabilidad:"})," Explora por qu\xe9 los Props son inmutables en React."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desestructuraci\xf3n de Props:"})," Aprende c\xf3mo hacer el c\xf3digo m\xe1s limpio utilizando desestructuraci\xf3n."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PropTypes:"})," Investiga c\xf3mo verificar los tipos de Props para evitar errores en tiempo de ejecuci\xf3n."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,r.jsx)(n.p,{children:"Los Props son fundamentales en React para pasar datos entre componentes, permitiendo su reutilizaci\xf3n y flexibilidad. Es importante asignar nombres claros y descriptivos a los Props para mejorar la legibilidad y el mantenimiento del c\xf3digo. Con la correcta comprensi\xf3n y uso de Props, podemos crear componentes m\xe1s din\xe1micos y eficientes."})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var r=o(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);