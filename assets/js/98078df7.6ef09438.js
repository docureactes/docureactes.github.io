"use strict";(self.webpackChunkdocubook=self.webpackChunkdocubook||[]).push([[4950],{1026:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var s=o(4848),i=o(8453);const a={},c="Configuraci\xf3n de displayName",d={id:"Componente/5-6-Configuraci\xf3n de displayName",title:"Configuraci\xf3n de displayName",description:"Cuando trabajamos con componentes en React, es posible que en alg\xfan momento necesitemos depurar el c\xf3digo o ver el \xe1rbol de componentes en herramientas como React DevTools. En estos casos, puede resultar \xfatil que los componentes tengan nombres claros y espec\xedficos, lo que facilita la identificaci\xf3n y resoluci\xf3n de problemas. Aqu\xed es donde entra en juego la propiedad displayName. Vamos a explorar c\xf3mo se utiliza y cu\xe1les son sus beneficios.",source:"@site/docs/5-Componente/5-6-Configuraci\xf3n de displayName.md",sourceDirName:"5-Componente",slug:"/Componente/5-6-Configuraci\xf3n de displayName",permalink:"/Componente/5-6-Configuraci\xf3n de displayName",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Declaraci\xf3n de componentes internos dentro de un componente",permalink:"/Componente/5-5-Declaraci\xf3n de componentes internos dentro de un componente"},next:{title:"Consideraciones al estructurar componentes",permalink:"/Componente/5-7-Consideraciones al estructurar componentes"}},r={},l=[{value:"\xbfQu\xe9 es <code>displayName</code>?",id:"qu\xe9-es-displayname",level:2},{value:"Ejemplo b\xe1sico",id:"ejemplo-b\xe1sico",level:3},{value:"Beneficios de usar <code>displayName</code>",id:"beneficios-de-usar-displayname",level:2},{value:"Uso de <code>displayName</code> en componentes de orden superior (HOC)",id:"uso-de-displayname-en-componentes-de-orden-superior-hoc",level:2},{value:"M\xe1s informaci\xf3n",id:"m\xe1s-informaci\xf3n",level:2},{value:"Resumen",id:"resumen",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"configuraci\xf3n-de-displayname",children:"Configuraci\xf3n de displayName"}),"\n",(0,s.jsxs)(n.p,{children:["Cuando trabajamos con componentes en React, es posible que en alg\xfan momento necesitemos depurar el c\xf3digo o ver el \xe1rbol de componentes en herramientas como React DevTools. En estos casos, puede resultar \xfatil que los componentes tengan nombres claros y espec\xedficos, lo que facilita la identificaci\xf3n y resoluci\xf3n de problemas. Aqu\xed es donde entra en juego la propiedad ",(0,s.jsx)(n.code,{children:"displayName"}),". Vamos a explorar c\xf3mo se utiliza y cu\xe1les son sus beneficios."]}),"\n",(0,s.jsxs)(n.h2,{id:"qu\xe9-es-displayname",children:["\xbfQu\xe9 es ",(0,s.jsx)(n.code,{children:"displayName"}),"?"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"displayName"})," es una propiedad especial en React que se utiliza para nombrar expl\xedcitamente un componente, sobre todo cuando este nombre no puede ser inferido autom\xe1ticamente por la herramienta de desarrollo o cuando se utiliza una funci\xf3n an\xf3nima. Es especialmente \xfatil en componentes creados din\xe1micamente, componentes an\xf3nimos, o componentes que son devueltos por una funci\xf3n de orden superior (HOC)."]}),"\n",(0,s.jsx)(n.h3,{id:"ejemplo-b\xe1sico",children:"Ejemplo b\xe1sico"}),"\n",(0,s.jsxs)(n.p,{children:["Veamos un ejemplo simple de c\xf3mo se puede utilizar ",(0,s.jsx)(n.code,{children:"displayName"})," en un componente funcional."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// Definimos un componente funcional b\xe1sico\nconst MiComponente = () => {\n  return (\n    <div>\n      <p>\xa1Hola desde MiComponente!</p>\n    </div>\n  );\n};\n\n// Establecemos el displayName para el componente\nMiComponente.displayName = 'MiComponentePersonalizado';\n\nexport default MiComponente;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 sucede aqu\xed?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Definici\xf3n del componente"}),": Primero, creamos un componente funcional b\xe1sico llamado ",(0,s.jsx)(n.code,{children:"MiComponente"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Asignaci\xf3n de displayName"}),": Luego, configuramos su propiedad ",(0,s.jsx)(n.code,{children:"displayName"})," a ",(0,s.jsx)(n.code,{children:"'MiComponentePersonalizado'"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Exportaci\xf3n"}),": Finalmente, exportamos el componente para usarlo en otras partes de la aplicaci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Cuando utilicemos React DevTools para inspeccionar este componente, veremos que aparece con el nombre "MiComponentePersonalizado" en lugar de "MiComponente". Esto facilita la identificaci\xf3n del componente en el \xe1rbol de React.'}),"\n",(0,s.jsxs)(n.h2,{id:"beneficios-de-usar-displayname",children:["Beneficios de usar ",(0,s.jsx)(n.code,{children:"displayName"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Mejor legibilidad en herramientas de desarrollo"}),": Al utilizar ",(0,s.jsx)(n.code,{children:"displayName"}),", podemos hacer que los nombres de los componentes sean m\xe1s claros y f\xe1ciles de entender al inspeccionar la aplicaci\xf3n."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Depuraci\xf3n m\xe1s f\xe1cil"}),": Si tienes varios componentes an\xf3nimos o generados din\xe1micamente, ",(0,s.jsx)(n.code,{children:"displayName"})," te ayudar\xe1 a diferenciarlos r\xe1pidamente durante la depuraci\xf3n."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Consistencia en el c\xf3digo"}),": Establecer un ",(0,s.jsx)(n.code,{children:"displayName"})," claro y descriptivo ayuda a mantener la consistencia y claridad en proyectos grandes, donde la estructura de componentes puede volverse compleja."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"uso-de-displayname-en-componentes-de-orden-superior-hoc",children:["Uso de ",(0,s.jsx)(n.code,{children:"displayName"})," en componentes de orden superior (HOC)"]}),"\n",(0,s.jsxs)(n.p,{children:["Los componentes de orden superior son funciones que reciben un componente y devuelven otro componente. A menudo, el nombre del componente original se pierde o se cambia, lo que puede dificultar la depuraci\xf3n. Aqu\xed es donde ",(0,s.jsx)(n.code,{children:"displayName"})," vuelve a ser \xfatil."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// Definimos un HOC que a\xf1ade funcionalidad extra\nconst conFuncionalidadExtra = (ComponenteBase) => {\n  const ComponenteMejorado = (props) => {\n    // Agregamos l\xf3gica adicional aqu\xed\n\n    return <ComponenteBase {...props} />;\n  };\n\n  // Establecemos un displayName descriptivo\n  ComponenteMejorado.displayName = `ConFuncionalidadExtra(${ComponenteBase.displayName || ComponenteBase.name || 'ComponenteBase'})`;\n\n  return ComponenteMejorado;\n};\n\n// Ejemplo de uso con un componente base\nconst MiComponente = () => <div>Contenido original</div>;\n\nconst MiComponenteConFuncionalidad = conFuncionalidadExtra(MiComponente);\n\nexport default MiComponenteConFuncionalidad;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\xbfQu\xe9 hace este ejemplo?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["HOC ",(0,s.jsx)(n.code,{children:"conFuncionalidadExtra"})]}),": Creamos un HOC que toma un componente base y devuelve un nuevo componente con funcionalidad adicional."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Asignaci\xf3n de displayName en HOC"}),": Usamos ",(0,s.jsx)(n.code,{children:"displayName"})," para nombrar el componente mejorado de manera descriptiva, lo que incluye el nombre del componente base."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Componente final"}),': Cuando inspeccionamos este componente en React DevTools, aparecer\xe1 con un nombre como "ConFuncionalidadExtra(MiComponente)", lo que es muy \xfatil para entender qu\xe9 sucede en el \xe1rbol de componentes.']}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"m\xe1s-informaci\xf3n",children:"M\xe1s informaci\xf3n"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Propiedad ",(0,s.jsx)(n.code,{children:"displayName"})," en React."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Componentes de orden superior (HOC) en React."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Mejores pr\xe1cticas para la depuraci\xf3n en React."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resumen",children:"Resumen"}),"\n",(0,s.jsxs)(n.p,{children:["La propiedad ",(0,s.jsx)(n.code,{children:"displayName"})," en React es una herramienta poderosa para mejorar la legibilidad y la depuraci\xf3n de componentes, especialmente en proyectos complejos o cuando se utilizan patrones como los componentes de orden superior. Asignar un ",(0,s.jsx)(n.code,{children:"displayName"})," claro y descriptivo facilita la identificaci\xf3n de componentes en herramientas como React DevTools, contribuyendo a un desarrollo m\xe1s eficiente y organizado."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>d});var s=o(6540);const i={},a=s.createContext(i);function c(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);